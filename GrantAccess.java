/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

/**
 *
 * @author ritesh
 */
import java.sql.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
public class GrantAccess extends javax.swing.JFrame {
Connection conn = null;
PreparedStatement pst=null;
ResultSet rs=null;
String club;
    /**
     * Creates new form GrantAccess
     */
    public GrantAccess(String club) {
        initComponents();
        this.club=club;
        conn=PecConnector.ConnectorDb();
        Update(club);
    }
private void Update(String club){
    String status="Pending";
    String sql1="select * from auditorium where Club_Society=? and Status='"+status+"'";
    String sql2="select * from football_ground where Club_Society=? and Status='"+status+"'";
    String sql3="select * from cricket_ground where Club_Society=? and Status='"+status+"'";
    String sql4="select * from athletic_ground where Club_Society=? and Status='"+status+"'";
    String sql5="select * from lecture_hall where Club_Society=? and Status='"+status+"'";
    String sql6="select * from tutorial_room where Club_Society=? and Status='"+status+"'";
    try{
    pst=conn.prepareStatement(sql1);
    pst.setString(1,club);
    rs=pst.executeQuery();
    Status_table1.setModel(DbUtils.resultSetToTableModel(rs));
    pst=conn.prepareStatement(sql2);
    pst.setString(1,club);
    rs=pst.executeQuery();
    Status_table2.setModel(DbUtils.resultSetToTableModel(rs));
    pst=conn.prepareStatement(sql3);
    pst.setString(1,club);
    rs=pst.executeQuery();
    Status_table3.setModel(DbUtils.resultSetToTableModel(rs));
    pst=conn.prepareStatement(sql4);
    pst.setString(1,club);
    rs=pst.executeQuery();
    Status_table4.setModel(DbUtils.resultSetToTableModel(rs));
    pst=conn.prepareStatement(sql5);
    pst.setString(1,club);
    rs=pst.executeQuery();
    Status_table5.setModel(DbUtils.resultSetToTableModel(rs));
    pst=conn.prepareStatement(sql6);
    pst.setString(1,club);
    rs=pst.executeQuery();
    Status_table6.setModel(DbUtils.resultSetToTableModel(rs));
    
    }
    catch(Exception e){}
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Status_tabs = new javax.swing.JTabbedPane();
        Audi = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        Status_table1 = new javax.swing.JTable();
        Football = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        Status_table2 = new javax.swing.JTable();
        Cricket = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        Status_table3 = new javax.swing.JTable();
        Athletic = new javax.swing.JLayeredPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        Status_table4 = new javax.swing.JTable();
        Lecture = new javax.swing.JLayeredPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        Status_table5 = new javax.swing.JTable();
        Tutorial = new javax.swing.JLayeredPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        Status_table6 = new javax.swing.JTable();
        confirmBook = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Status_tabs.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Status", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N

        Status_table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Club/Society", "Status", "From Date", "To Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Status_table1);

        Audi.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout AudiLayout = new javax.swing.GroupLayout(Audi);
        Audi.setLayout(AudiLayout);
        AudiLayout.setHorizontalGroup(
            AudiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AudiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );
        AudiLayout.setVerticalGroup(
            AudiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AudiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(296, 296, 296))
        );

        Status_tabs.addTab("Auditorium", Audi);

        Status_table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Club/Society", "Status", "From Date", "To Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Status_table2);

        Football.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout FootballLayout = new javax.swing.GroupLayout(Football);
        Football.setLayout(FootballLayout);
        FootballLayout.setHorizontalGroup(
            FootballLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FootballLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );
        FootballLayout.setVerticalGroup(
            FootballLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FootballLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(247, Short.MAX_VALUE))
        );

        Status_tabs.addTab("Football gr.", Football);

        Status_table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Club/Society", "Status", "From Date", "To Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(Status_table3);

        Cricket.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout CricketLayout = new javax.swing.GroupLayout(Cricket);
        Cricket.setLayout(CricketLayout);
        CricketLayout.setHorizontalGroup(
            CricketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CricketLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );
        CricketLayout.setVerticalGroup(
            CricketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CricketLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(247, Short.MAX_VALUE))
        );

        Status_tabs.addTab("Cricket gr.", Cricket);

        Status_table4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Club/Society", "Status", "From Date", "To Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(Status_table4);

        Athletic.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout AthleticLayout = new javax.swing.GroupLayout(Athletic);
        Athletic.setLayout(AthleticLayout);
        AthleticLayout.setHorizontalGroup(
            AthleticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AthleticLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );
        AthleticLayout.setVerticalGroup(
            AthleticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AthleticLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(247, Short.MAX_VALUE))
        );

        Status_tabs.addTab("Athletic gr.", Athletic);

        Status_table5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Club/Society", "Room No.", "Status", "From Date", "To Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(Status_table5);

        Lecture.setLayer(jScrollPane7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout LectureLayout = new javax.swing.GroupLayout(Lecture);
        Lecture.setLayout(LectureLayout);
        LectureLayout.setHorizontalGroup(
            LectureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LectureLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
        );
        LectureLayout.setVerticalGroup(
            LectureLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LectureLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(246, Short.MAX_VALUE))
        );

        Status_tabs.addTab("Lecture halls", Lecture);

        Status_table6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Club/Society", "Room No.", "Status", "From Date", "To Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(Status_table6);

        Tutorial.setLayer(jScrollPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout TutorialLayout = new javax.swing.GroupLayout(Tutorial);
        Tutorial.setLayout(TutorialLayout);
        TutorialLayout.setHorizontalGroup(
            TutorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TutorialLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
        );
        TutorialLayout.setVerticalGroup(
            TutorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TutorialLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(246, Short.MAX_VALUE))
        );

        Status_tabs.addTab("Tutorial Room", Tutorial);

        confirmBook.setText("Confirm Booking");
        confirmBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBookActionPerformed(evt);
            }
        });

        jButton1.setText("Clear Selection");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(Status_tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(confirmBook, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(76, 76, 76))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Status_tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(confirmBook)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(224, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBookActionPerformed
         String status="Booked";
         String status2="Rejected";
         String fromDate;
         String toDate;
         int row,room;  
    try{
        if(Status_table1.getSelectedRow()!=-1){
        row=Status_table1.getSelectedRow();
        fromDate=Status_table1.getValueAt(row, 2).toString();
        toDate=Status_table1.getValueAt(row, 3).toString();
        String sql1="update auditorium SET Status=? where Club_Society=? and from_date=? and to_date=?";
        pst=conn.prepareStatement(sql1);
        pst.setString(2, club);
        pst.setString(3, fromDate);
        pst.setString(4, toDate);
        int confirm=JOptionPane.showConfirmDialog(null,"Do you really want to accept the booking?");
            if(confirm==0){
                pst.setString(1, status);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Booking confirmed!");
            }
            else if(confirm==1){
                pst.setString(1, status2);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Request rejected!");
            }
        }
        if(Status_table2.getSelectedRow()!=-1){
        row=Status_table2.getSelectedRow();
        fromDate=Status_table2.getValueAt(row, 2).toString();
        toDate=Status_table2.getValueAt(row, 3).toString();
        String sql1="update football_ground SET Status=? where Club_Society=? and from_date=? and to_date=?";
        pst=conn.prepareStatement(sql1);
        pst.setString(2, club);
        pst.setString(3, fromDate);
        pst.setString(4, toDate);
        int confirm=JOptionPane.showConfirmDialog(null,"Do you really want to accept the booking?");
            if(confirm==0){
                pst.setString(1, status);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Booking confirmed!");
            }
            else if(confirm==1){
                pst.setString(1, status2);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Request rejected!");
            }
        }
        if(Status_table3.getSelectedRow()!=-1){
        row=Status_table3.getSelectedRow();
        fromDate=Status_table3.getValueAt(row, 2).toString();
        toDate=Status_table3.getValueAt(row, 3).toString();
        String sql1="update cricket_ground SET Status=? where Club_Society=? and from_date=? and to_date=?";
        pst=conn.prepareStatement(sql1);
        pst.setString(2, club);
        pst.setString(3, fromDate);
        pst.setString(4, toDate);
        int confirm=JOptionPane.showConfirmDialog(null,"Do you really want to accept the booking?");
            if(confirm==0){
                pst.setString(1, status);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Booking confirmed!");
            }
            else if(confirm==1){
                pst.setString(1, status2);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Request rejected!");
            }
        }
        if(Status_table4.getSelectedRow()!=-1){
        row=Status_table4.getSelectedRow();
        fromDate=Status_table4.getValueAt(row, 2).toString();
        toDate=Status_table4.getValueAt(row, 3).toString();
        String sql1="update athletic_ground SET Status=? where Club_Society=? and from_date=? and to_date=?";
        pst=conn.prepareStatement(sql1);
        pst.setString(2, club);
        pst.setString(3, fromDate);
        pst.setString(4, toDate);
        int confirm=JOptionPane.showConfirmDialog(null,"Do you really want to accept the booking?");
            if(confirm==0){
                pst.setString(1, status);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Booking confirmed!");
            }
            else if(confirm==1){
                pst.setString(1, status2);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Request rejected!");
            }
        }
        if(Status_table5.getSelectedRow()!=-1){
        row=Status_table5.getSelectedRow();
        room=Integer.parseInt(Status_table5.getValueAt(row, 1).toString());
        fromDate=Status_table5.getValueAt(row, 3).toString();
        toDate=Status_table5.getValueAt(row, 4).toString();
        String sql1="update lecture_hall SET Status=? where Club_Society=? and Room_No=? and from_date=? and to_date=?";
        pst=conn.prepareStatement(sql1);
        pst.setString(2, club);
        pst.setInt(3, room);
        pst.setString(4, fromDate);
        pst.setString(5, toDate);
        int confirm=JOptionPane.showConfirmDialog(null,"Do you really want to accept the booking?");
            if(confirm==0){
                pst.setString(1, status);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Booking confirmed!");
            }
            else if(confirm==1){
                pst.setString(1, status2);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Request rejected!");
            }
        }
        if(Status_table6.getSelectedRow()!=-1){
        row=Status_table6.getSelectedRow();
        room=Integer.parseInt(Status_table6.getValueAt(row, 1).toString());
        fromDate=Status_table6.getValueAt(row, 3).toString();
        toDate=Status_table6.getValueAt(row, 4).toString();
        String sql1="update tutorial_room SET Status=? where Club_Society=? and Room_No=? and from_date=? and to_date=?";
        pst=conn.prepareStatement(sql1);
        pst.setString(2, club);
        pst.setInt(3, room);
        pst.setString(4, fromDate);
        pst.setString(5, toDate);
        int confirm=JOptionPane.showConfirmDialog(null,"Do you really want to accept the booking?");
            if(confirm==0){
                pst.setString(1, status);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Booking confirmed!");
            }
            else if(confirm==1){
                pst.setString(1, status2);
                pst.execute();
                Update(club);
                JOptionPane.showMessageDialog(null,"Request rejected!");
            }
        }
    }
    catch(Exception e){}
    }//GEN-LAST:event_confirmBookActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Status_table1.clearSelection();
        Status_table2.clearSelection();
        Status_table3.clearSelection();
        Status_table4.clearSelection();
        Status_table5.clearSelection();
        Status_table6.clearSelection();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GrantAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GrantAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GrantAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GrantAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GrantAccess(club).setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane Athletic;
    private javax.swing.JLayeredPane Audi;
    private javax.swing.JLayeredPane Cricket;
    private javax.swing.JLayeredPane Football;
    private javax.swing.JLayeredPane Lecture;
    private javax.swing.JTable Status_table1;
    private javax.swing.JTable Status_table2;
    private javax.swing.JTable Status_table3;
    private javax.swing.JTable Status_table4;
    private javax.swing.JTable Status_table5;
    private javax.swing.JTable Status_table6;
    private javax.swing.JTabbedPane Status_tabs;
    private javax.swing.JLayeredPane Tutorial;
    private javax.swing.JButton confirmBook;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    // End of variables declaration//GEN-END:variables
}
